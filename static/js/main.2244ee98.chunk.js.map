{"version":3,"sources":["components/OpenPersonal.jsx","components/Personal.jsx","components/Card.jsx","components/List.jsx","components/Search.jsx","components/Diagramm.jsx","components/Repo.jsx","components/Header.jsx","App.jsx","index.js"],"names":["reposQuery","gql","Repos","query","loading","error","data","src","alt","id","viewer","login","repositories","nodes","map","repo","className","name","href","url","to","Personal","props","state","token","document","getElementById","value","localStorage","setItem","window","location","reload","placeholder","onClick","auth","React","Component","Card","avatar","List","this","index","owner","avatar_url","html_url","api_url","Search","vis","page","pages","per_page","pagination","setState","search","text","paggArr","Array","i","length","sort","sortValue","split","axios","then","response","items","ActiveP","alert","catch","message","getElementsByClassName","innerText","classList","add","remove","onChange","CurrentP","type","re_search","prev","changePageOnClick","next","PieChart","options","labels","responsive","breakpoint","chart","width","legend","position","series","open","close","repoQuery","Repo","path","pathname","repoName","slice","useQuery","variables","console","log","closeIssue","openIssue","issues","repository","edges","node","createDateTime","createdAt","createDate","createTime","updateDateTime","updatedAt","updateDate","updateTime","languages","language","forkCount","Header","link","HttpLink","uri","headers","authorization","getItem","client","ApolloClient","cache","InMemoryCache","App","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.2244ee98.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport gql from \"graphql-tag\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst reposQuery = gql`\r\n  query {\r\n    viewer {\r\n      id\r\n      login\r\n      repositories(first: 100) {\r\n        nodes {\r\n          id\r\n          name\r\n          url\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst Repos = () => (\r\n  <Query query={reposQuery}>\r\n    {({ loading, error, data }) => {\r\n      if (loading)\r\n        return (\r\n          <div>\r\n            <img\r\n              src=\"https://flevix.com/wp-content/uploads/2020/01/Preloader-2.svg\"\r\n              alt=\"preloader\"\r\n            />\r\n          </div>\r\n        );\r\n      if (error)\r\n        return (\r\n          <h3 id=\"error\">Вы не авторизированы, введите github access token</h3>\r\n        );\r\n\r\n      return (\r\n        <div id=\"personal-repos\">\r\n          <h3>Вы вошли как {data.viewer.login}, ваши репозитории:</h3>\r\n          {data.viewer.repositories.nodes.map((repo) => {\r\n            return (\r\n              <div className=\"repo-wrapper\" key={repo.id}>\r\n                <h4>{repo.name}</h4>{\" \"}\r\n                <a className=\"url\" href={repo.url}>\r\n                  {repo.url}\r\n                </a>\r\n                <br />\r\n                <div className=\"url\">\r\n                  <Link to={\"/repo/\" + repo.name}>Просмотр инфы</Link>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    }}\r\n  </Query>\r\n);\r\n\r\nexport default Repos;\r\n","import React from \"react\";\r\nimport Repos from \"./OpenPersonal\";\r\n\r\nexport default class Personal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    };\r\n  }\r\n  auth() {\r\n    let token = document.getElementById(\"input-token\").value;\r\n    localStorage.setItem(\"token\", token);\r\n    window.location.reload();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"form\">\r\n          <h4>Вход</h4>\r\n          <input id=\"input-token\" placeholder=\"Введите ваш token\" />\r\n          <button\r\n            onClick={() => {\r\n              this.auth();\r\n            }}\r\n          >\r\n            Войти\r\n          </button>\r\n        </div>\r\n\r\n        <Repos />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Card(props) {\r\n  return (\r\n    <div className=\"Card\">\r\n      <div>\r\n        <img className=\"avatar\" alt=\"avatar\" src={props.avatar} />\r\n      </div>\r\n      <div className=\"Login\">\r\n        <h3>{props.login}</h3>\r\n      </div>\r\n      <a className=\"url\" href={props.url}>\r\n        <div>{props.name}</div>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nexport default class List extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"List\">\r\n        {this.props.data.map((repo, index) => {\r\n          return (\r\n            <Card\r\n              key={index}\r\n              avatar={repo.owner.avatar_url}\r\n              login={repo.owner.login}\r\n              url={repo.html_url}\r\n              api_url={repo.url}\r\n              name={repo.name}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport List from \"./List\";\r\n\r\nexport default class Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      vis: \"non-vis\",\r\n      page: 1,\r\n      pages: 25,\r\n      per_page: 10,\r\n      pagination: []\r\n    };\r\n  }\r\n\r\n  re_search() {\r\n    this.setState(\r\n      () => {\r\n        return { page: 1 };\r\n      },\r\n      () => this.search()\r\n    );\r\n  }\r\n\r\n  search() {\r\n    let text = document.getElementById(\"search-text\").value;\r\n\r\n    let paggArr = new Array(this.state.pages);\r\n    for (let i = 0; i < paggArr.length; i++) paggArr[i] = i;\r\n\r\n    if (text !== \"\") {\r\n      let sort = document.getElementById(\"sort-items\").value;\r\n      let sortValue = sort.split(\"-\")[1];\r\n      let pagination =\r\n        \"&page=\" + this.state.page + \"&per_page=\" + this.state.per_page;\r\n      let url =\r\n        \"https://api.github.com/search/repositories?q=\" + text + pagination;\r\n\r\n      if (sort === \"best-matches\") url += \"&o=desc\";\r\n\r\n      if (sort === \"most-stars\") url += \"&sort=\" + sortValue + \"&order=desc\";\r\n\r\n      if (sort === \"fewest-stars\") url += \"&sort=\" + sortValue + \"&order=asc\";\r\n\r\n      if (sort === \"most-forks\") url += \"&sort=\" + sortValue + \"&order=desc\";\r\n\r\n      if (sort === \"fewest-forks\") url += \"&sort=\" + sortValue + \"&order=asc\";\r\n\r\n      if (sort === \"resently-updated\")\r\n        url += \"&sort=\" + sortValue + \"&order=desc\";\r\n\r\n      if (sort === \"lasts-resently-updated\")\r\n        url += \"&sort=\" + sortValue + \"&order=asc\";\r\n\r\n      axios(url)\r\n        .then((response) => {\r\n          if (response.data.items.length !== 0) {\r\n            this.setState(\r\n              () => {\r\n                return {\r\n                  data: response.data.items,\r\n                  pagination: paggArr,\r\n                  vis: \"vis\"\r\n                };\r\n              },\r\n              () => this.ActiveP()\r\n            );\r\n          } else alert(\"Репозиториев с таким именем не найдено.\");\r\n        })\r\n        .catch((error) => {\r\n          alert(error.message);\r\n        });\r\n    }\r\n  }\r\n\r\n  next() {\r\n    if (this.state.page === this.state.pages)\r\n      this.setState(\r\n        () => {\r\n          return { page: 1 };\r\n        },\r\n        () => this.search()\r\n      );\r\n    else\r\n      this.setState(\r\n        (state) => {\r\n          return { page: state.page + 1 };\r\n        },\r\n        () => this.search()\r\n      );\r\n  }\r\n\r\n  prev() {\r\n    if (this.state.page !== 1)\r\n      this.setState(\r\n        (state) => {\r\n          return { page: state.page - 1 };\r\n        },\r\n        () => this.search()\r\n      );\r\n    else\r\n      this.setState(\r\n        (state) => {\r\n          return { page: state.pages };\r\n        },\r\n        () => this.search()\r\n      );\r\n  }\r\n\r\n  CurrentP(page) {\r\n    this.setState(() => {\r\n      return { page: page };\r\n    });\r\n  }\r\n\r\n  ActiveP() {\r\n    let pages = document.getElementsByClassName(\"page\");\r\n\r\n    for (let i = 0; i < pages.length; i++) {\r\n      if (this.state.page === +pages[i].innerText) {\r\n        pages[i].classList.add(\"active\");\r\n      } else {\r\n        pages[i].classList.remove(\"active\");\r\n      }\r\n    }\r\n  }\r\n\r\n  changePageOnClick(page) {\r\n    this.setState(\r\n      () => {\r\n        return { page: page };\r\n      },\r\n      () => this.search()\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3 className=\"headhead\"> Search Repos </h3>\r\n        <div id=\"search\">\r\n          <select id=\"sort-items\" onChange={() => this.CurrentP(1)}>\r\n            <option value=\"best-match\">Best match</option>\r\n            <option value=\"most-stars\">Most stars</option>\r\n            <option value=\"fewest-stars\">Fewest stars</option>\r\n            <option value=\"most-forks\">Most forks</option>\r\n            <option value=\"fewest-forks\">Fewest forks</option>\r\n            <option value=\"resently-updated\">Resently updated</option>\r\n            <option value=\"lasts-resently-updated\">\r\n              Lasts resently updated\r\n            </option>\r\n          </select>\r\n          <input type=\"text\" id=\"search-text\" />\r\n          <button onClick={() => this.re_search()}>Search</button>\r\n        </div>\r\n\r\n        <List data={this.state.data} />\r\n\r\n        <div id=\"pagination\" className={this.state.vis}>\r\n          <button onClick={() => this.prev()}>Prev</button>\r\n          <div id=\"pages\">\r\n            {this.state.pagination.map((page) => {\r\n              return (\r\n                <div\r\n                  className=\"page\"\r\n                  onClick={() => this.changePageOnClick(page + 1)}\r\n                  key={page}\r\n                >\r\n                  {page + 1}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <button onClick={() => this.next()}>Next</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\nexport default class PieChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      options: {\r\n        labels: [\"Open issues\", \"Closed issues\"],\r\n        responsive: [\r\n          {\r\n            breakpoint: 480,\r\n            options: {\r\n              chart: {\r\n                width: 200\r\n              },\r\n              legend: {\r\n                position: \"bottom\"\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      series: [this.props.open, this.props.close]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"chart\">\r\n        <ReactApexChart\r\n          options={this.state.options}\r\n          series={this.state.series}\r\n          type=\"pie\"\r\n          width=\"380\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport Diagram from \"./Diagramm\";\r\n\r\nconst repoQuery = gql`\r\n  query Info($repoName: String!) {\r\n    viewer {\r\n      id\r\n      login\r\n      repository(name: $repoName) {\r\n        issues(first: 100) {\r\n          edges {\r\n            node {\r\n              state\r\n            }\r\n          }\r\n        }\r\n        ref(qualifiedName: \"master\") {\r\n          target {\r\n            ... on Commit {\r\n              committedDate\r\n            }\r\n          }\r\n        }\r\n        forkCount\r\n        updatedAt\r\n        createdAt\r\n        languages(first: 10) {\r\n          nodes {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Repo() {\r\n  let path = window.location.pathname;\r\n  const repoName = path.slice(6, path.length);\r\n  const { loading, error, data } = useQuery(repoQuery, {\r\n    variables: { repoName }\r\n  });\r\n\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <img\r\n          src=\"https://flevix.com/wp-content/uploads/2019/07/Ring-Preloader.gif\"\r\n          alt=\"preloader\"\r\n        />\r\n      </div>\r\n    );\r\n  if (error) return <p>Возикла ошибка{console.log(error.message)}</p>;\r\n  let closeIssue = 0;\r\n  let openIssue = 0;\r\n  let issues = data.viewer.repository.issues.edges;\r\n  for (let i = 0; i < issues.length; i++) {\r\n    if (issues[i].node.state === \"OPEN\") openIssue++;\r\n    else if (issues[i].node.state === \"CLOSED\") closeIssue++;\r\n  }\r\n\r\n  let createDateTime = data.viewer.repository.createdAt;\r\n  createDateTime = createDateTime.slice(0, createDateTime.length - 1);\r\n  let createDate = createDateTime.split(\"T\")[0];\r\n  let createTime = createDateTime.split(\"T\")[1];\r\n\r\n  let updateDateTime = data.viewer.repository.updatedAt;\r\n  updateDateTime = updateDateTime.slice(0, updateDateTime.length - 1);\r\n  let updateDate = updateDateTime.split(\"T\")[0];\r\n  let updateTime = updateDateTime.split(\"T\")[1];\r\n\r\n  return (\r\n    <div id=\"repo-info\">\r\n      <div id=\"title\">\r\n        <strong>Репозиторий:</strong> {repoName}\r\n      </div>\r\n      <div id=\"date-time-create\">\r\n        <strong>Дата и время создания: </strong>\r\n        {createDate} {createTime}\r\n      </div>\r\n      <div id=\"date-time-update\">\r\n        <strong>Последнее обновление: </strong> {updateDate} {updateTime}\r\n      </div>\r\n      <div id=\"languages\">\r\n        <strong>Используемые языки программирования:</strong>\r\n        <ul>\r\n          {data.viewer.repository.languages.nodes.length !== 0 ? (\r\n            data.viewer.repository.languages.nodes.map((language) => {\r\n              return <li key={language.id}>{language.name}</li>;\r\n            })\r\n          ) : (\r\n            <div>Нет языков программирования</div>\r\n          )}\r\n        </ul>\r\n      </div>\r\n      <div id=\"forks\">\r\n        <strong>Количество форков: </strong>\r\n        {data.viewer.repository.forkCount}\r\n      </div>\r\n      {issues.length === 0 ? (\r\n        <div id=\"not-issues\">Empty issues</div>\r\n      ) : (\r\n        <Diagram open={openIssue} close={closeIssue} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"nav\">\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Главная</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/search\">Поиск</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { HttpLink } from \"apollo-link-http\";\n\nimport Personal from \"./components/Personal\";\nimport Search from \"./components/Search\";\nimport Repo from \"./components/Repo\";\nimport Header from \"./components/Header\";\n\nexport { client };\n\nconst link = new HttpLink({\n  uri: \"https://api.github.com/graphql\",\n  headers: {\n    authorization: \"Bearer \" + localStorage.getItem(\"token\")\n  }\n});\n\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache()\n});\n\nconst App = () => (\n  <ApolloProvider client={client}>\n    <BrowserRouter>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Personal} />\n        <Route exact path=\"/search\" component={Search} />\n        <Route path=\"/repo/:name\" component={Repo} />\n      </Switch>\n    </BrowserRouter>\n  </ApolloProvider>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport \"./styles.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}